====
Par iteration
====

nHarmonics = 4;
process = par(i, nHarmonics, _) :> /(nHarmonics) * si.smoo;

---
(program
  (definition name: (id) value: (int))
  (definition
    name: (id)
    value: (merge
      left: (iteration
        type: (par)
        current_iter: (id)
        num_iters: (id)
        expression: (wire))
      right: (infix
        left: (partial operator: (div) operand: (id))
        operator: (mult)
        right: (access environment: (id) definition: (id))))))

====
Seq iteration
====

nBands = 4;
process = seq(i, nBands, oneBand(i));

---
(program
  (definition name: (id) value: (int))
  (definition
    name: (id)
    value: (iteration
      type: (seq)
      current_iter: (id)
      num_iters: (id)
      expression: (function_call callee: (id) (arguments (id))))))

====
Sum iteration
====

nHarmonics = 4;
process = sum(i, nHarmonics, _)/(nHarmonics) * si.smoo;

---
(program
  (definition
    name: (id)
    value: (int))
  (definition
    name: (id)
    value: (infix
      left: (infix
        left: (iteration
          type: (sum)
          current_iter: (id)
          num_iters: (id)
          expression: (wire))
        operator: (div)
        right: (id))
      operator: (mult)
      right: (access environment: (id) definition: (id)))))

====
Prod iteration
====

nOscs = 4;
process = prod(i, nOscs, _) * si.smoo;

---
(program
  (definition
    name: (id)
    value: (int))
      (definition
        name: (id)
        value: (infix
          left: (iteration
            type: (prod)
            current_iter: (id)
            num_iters: (id)
            expression: (wire))
          operator: (mult)
          right: (access environment: (id) definition: (id)))))
