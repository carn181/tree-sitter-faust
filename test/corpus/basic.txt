====
Empty
====

---
(program)

====
Comment
====

// Parse as a comment: `process = +(1);`
/**
Everything in here should parse as a comment:
```
    declare complex_string "a\"\n\r!@#$%^&*(),<.>?/~`{}\|\';:";
    process = +(1);
```
*/

var = 1; // Comment at the end of a line.
process = var; /* Comment at the end of a line. */

// Bye! /*still in line comment...*/ // still in line comment...
---
(program
  (comment)
  (comment)
  (definition (identifier) (int))
  (comment)
  (definition (identifier) (identifier))
  (comment)
  (comment))

====
Namespaced variable assignment
====

process = ::foo::bar::baz;

---
(program
  (definition (identifier) (identifier)))

====
Function definition
====

identity(var) = var;
identity ( var ) = var ;

---
(program
  (function_definition
    (identifier)
    (parameters (parameter))
    (identifier))
  (function_definition
    (identifier)
    (parameters (parameter))
    (identifier)))

====
Global metadata
====

declare name "Noise";

---
(program
  (global_metadata
    (metadata_key)
    (string)))

====
Complex string
====

declare complex_string "a\"\n\r!@#$%^&*(),<.>?/~`{}\|\';:";

---
(program
  (global_metadata
    (metadata_key)
    (string)))

====
Import
====

import("stdfaust.lib");
import ( "stdfaust.lib" ) ;
---
(program
  (file_import (string))
  (file_import (string)))

====
Memory
====

// These are semantically equivalent.
var1 = mem;
var2 = @(var1);
process = var2';

---
(program
  (comment)
  (definition
    (identifier) (mem_op))
  (definition
    (identifier)
    (prefix
      (delay_op)
      (identifier)))
  (definition
    (identifier)
    (modifier (identifier) (one_sample_delay_op))))
